# версия docker-compose
version: '3.8'

volumes:
  postgres_data:  

services:
  database:
    image: postgres:12.0-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-survey}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-survey}
      DB_NAME: ${POSTGRES_DB:-survey}

  api:
    build:
      context: ./
      dockerfile: docker/api/Dockerfile
    container_name: api
    restart: always
    command: bash -c "
      python manage.py migrate &&
      gunicorn -b 0.0.0.0:8000 --worker-class=gevent --worker-connections=1000 --workers=5 trood.wsgi"
    ports:
      - "8000:8000"
    depends_on:
      - database
    env_file:
      - ./.env
    volumes:
      - ./api/:/code/api

  frontend:
    build:
      context: ./
      dockerfile: docker/admin/Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
    depends_on:
      - api
    ports:
      - "80:80"

  nginx_backend_server:
    build:
      context: ./
      dockerfile: docker/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8000:8000"
    depends_on:
      - api

#  admin:
#    build:
#      context: ./
#      dockerfile: docker/admin/Dockerfile
#    container_name: np-admin-dev
#    depends_on:
#      - api
#    expose:
#      - "8081"
#    ports:
#      - "${NP_ADMIN_PORT:-8081}:8081"
#    environment:
#      VITE_API_URL: "http://localhost:${NP_API_PORT:-8000}"
#    volumes:
#      - ./src/admin/:/app/
#      # Add container-only node modules to avoid huge FS I/O overhead
#      - /app/node_modules/