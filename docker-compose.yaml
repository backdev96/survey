# версия docker-compose
version: '3.8'

volumes:
  postgres_data:  

services:
  redis:
    restart: always
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - db-net

  database:
    image: postgres:12.0-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-survey}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-survey}
      DB_NAME: ${POSTGRES_DB:-survey}
    networks:
      - db-net

  api:
    build:
      context: ./
      dockerfile: docker/api/Dockerfile
    container_name: api
    restart: always
    command: bash -c "
                python manage.py migrate &&
                python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database
      - redis
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - ./api/:/code/api
    networks:
      - db-net

  frontend:
    build:
      context: ./
      dockerfile: docker/frontend/Dockerfile
    container_name: frontend
    command : npm start
    volumes:
      - ./frontend:/app
    depends_on:
      - api
    ports:
      - "3000:3000"
    networks:
      - db-net
    stdin_open: true

networks:
  db-net:
    driver: bridge
#  frontend:
#    build:
#      context: ./
#      dockerfile: docker/frontend/Dockerfile
#    container_name: np-frontend-dev
#    depends_on:
#      - api
#    expose:
#      - "8081"
#    ports:
#      - "${NP_ADMIN_PORT:-8081}:8081"
#    environment:
#      VITE_API_URL: "http://localhost:${NP_API_PORT:-8000}"
#    volumes:
#      - ./src/frontend/:/app/
#      # Add container-only node modules to avoid huge FS I/O overhead
#      - /app/node_modules/